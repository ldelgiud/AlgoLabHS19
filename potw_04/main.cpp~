#include <iostream>
#include <algorithm>
#include <vector>
#include <utility>

#include <CGAL/Exact_predicates_exact_constructions_kernel.h>
#include <CGAL/Ray_2.h>
typedef CGAL::Exact_predicates_exact_constructions_kernel   K;
typedef K::Ray_2 Ray;
typedef K::Point_2 Point;

void test_case() {
  int n; std::cin >> n;
  //biker, active
  std::vector<Ray> bikers;
  bikers.reserve(n);
    
  for (int i = 0; i < n; ++i) {
    long y_0, x_1, y_1;
    std::cin >> y_0 >> x_1 >> y_1;
    bikers.push_back(Ray(Point(0,y_0), Point(x_1, y_1)));

    std::sort(bikers.begin(), bikers.end(), [](Ray a, Ray b) {
	if (std::atan(a.point()./);
    });)
}


int main() {
  int t; std::cin >> t;
  while(t--) test_case();
  
}
